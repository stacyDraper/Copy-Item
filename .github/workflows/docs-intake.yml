      - name: Download proposal pack (via Contents API)
        env:
          ZIP_URL: ${{ steps.find_zip.outputs.zip_url }}
          GH_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}
        run: |
          set -euo pipefail

          echo "ZIP_URL=$ZIP_URL"
          # Expect URLs like: https://github.com/OWNER/REPO/raw/<branch>/<path/to/file.zip>
          BRANCH=$(echo "$ZIP_URL" | sed -n 's#.*/raw/\([^/]*\)/.*#\1#p')
          PATH_IN_REPO=$(echo "$ZIP_URL" | sed -n 's#.*/raw/[^/]*/##p')

          if [ -z "${BRANCH}" ] || [ -z "${PATH_IN_REPO}" ]; then
            echo "Could not parse branch/path from ZIP_URL; please use the /raw/<branch>/... form."
            exit 1
          fi

          API_URL="https://api.github.com/repos/${REPO}/contents/${PATH_IN_REPO}?ref=${BRANCH}"
          echo "API_URL=${API_URL}"

          # Fetch raw bytes using the Contents API
          curl -sSL \
            -H "Authorization: Bearer ${GH_TOKEN}" \
            -H "Accept: application/vnd.github.raw" \
            -o proposal-pack.zip \
            "${API_URL}"

          # Verify it's really a zip
          if ! unzip -t proposal-pack.zip >/dev/null 2>&1; then
            echo "::error ::Downloaded file is not a valid zip. Check the Issue URL and that the file exists in the repo."
            echo "First bytes:"
            head -c 64 proposal-pack.zip | hexdump -C || true
            exit 9
          fi

          mkdir -p proposals
          unzip -q proposal-pack.zip -d proposals
          ls -la proposals
