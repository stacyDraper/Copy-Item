name: docs-intake
on:
  issues:
    types: [opened, edited, labeled]

permissions:
  contents: write
  pull-requests: write
  issues: read

jobs:
  intake:
    if: ${{ contains(github.event.issue.labels.*.name, 'docs-proposal') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find .zip URL in issue body
        id: find_zip
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.issue.body || '';
            const m = body.match(/https?:\/\/\S+\.zip/);
            if (!m) { core.setFailed('No .zip URL found in the issue body.'); return; }
            core.setOutput('zip_url', m[0]);

      - name: Download proposal pack (via Contents API)
        env:
          ZIP_URL: ${{ steps.find_zip.outputs.zip_url }}
          GH_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}
        run: |
          set -euo pipefail

          echo "ZIP_URL=$ZIP_URL"
          # Expect: https://github.com/<owner>/<repo>/raw/<branch>/<path/to/file.zip>
          BRANCH=$(echo "$ZIP_URL" | sed -n 's#.*/raw/\([^/]*\)/.*#\1#p')
          PATH_IN_REPO=$(echo "$ZIP_URL" | sed -n 's#.*/raw/[^/]*/##p')
          if [ -z "${BRANCH}" ] || [ -z "${PATH_IN_REPO}" ]; then
            echo "Could not parse branch/path from ZIP_URL; please use the /raw/<branch>/... form."
            exit 1
          fi
          API_URL="https://api.github.com/repos/${REPO}/contents/${PATH_IN_REPO}?ref=${BRANCH}"
          echo "API_URL=${API_URL}"

          # Fetch raw bytes for private repos
          curl -sSL \
            -H "Authorization: Bearer ${GH_TOKEN}" \
            -H "Accept: application/vnd.github.raw" \
            -o proposal-pack.zip \
            "${API_URL}"

          mkdir -p proposals
          unzip -q proposal-pack.zip -d proposals
          ls -la proposals || true

      - name: Apply proposals (no patches)
        run: |
          set -euo pipefail
          shopt -s nullglob
          mkdir -p docs

          # Ignore any patches dir if present
          rm -rf proposals/patches || true

          # Copy each *-proposal.md into docs/, dropping the "-proposal" suffix
          changed=0
          for f in proposals/*-proposal.md; do
            base=$(basename "$f")
            dest="docs/${base%-proposal.md}.md"
            cp "$f" "$dest"
            echo "[ok] wrote $dest"
            changed=1
          done

          # Optional extras
          if [ -f proposals/CHANGELOG.md ]; then
            cp proposals/CHANGELOG.md CHANGELOG.md
            changed=1
          fi

          if [ "$changed" = "0" ]; then
            echo "::warning ::No *-proposal.md files found in the ZIP."
          fi

      - name: Create PR
        uses: peter-evans/create-pull-request@v6
        with:
          branch: docs/update-${{ github.run_id }}
          title: "Docs: apply proposal from #${{ github.event.issue.number }}"
          body: |
            Applying proposal bundle from issue #${{ github.event.issue.number }}.
            Source: ${{ steps.find_zip.outputs.zip_url }}
          commit-message: "docs: apply proposal from issue #${{ github.event.issue.number }}"
          add-paths: |
            docs/**
            CHANGELOG.md
